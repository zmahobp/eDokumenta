// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace Aplikacija.Migrations
{
    [DbContext(typeof(BazaContext))]
    partial class BazaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.DozvolaZaOruzje", b =>
                {
                    b.Property<int>("IDdokumenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDdokumenta"));

                    b.Property<string>("BrojDozvoleZaOruzje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojOruzjaPoVrsti")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Datum_isteka")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Datum_izdavanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdKorisnika")
                        .HasColumnType("int");

                    b.Property<string>("KalibarOruzja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KolicinaOruzja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MestoUpotrebe")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Naziv")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("QR_kod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SvrhaUpotrebe")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("VrsteOruzja")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("izdat_od")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IDdokumenta");

                    b.HasIndex("IdKorisnika")
                        .IsUnique();

                    b.ToTable("Dozvola za oruzje");
                });

            modelBuilder.Entity("Models.KorisnickaPodrska", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Podrska")
                        .HasColumnType("bit");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TajniKljuc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Korisnicka Podrska");
                });

            modelBuilder.Entity("Models.LicnaKarta", b =>
                {
                    b.Property<int>("IDdokumenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDdokumenta"));

                    b.Property<string>("BrojLicneKarte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Datum_isteka")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Datum_izdavanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdKorisnika")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("QR_kod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("izdat_od")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IDdokumenta");

                    b.HasIndex("IdKorisnika")
                        .IsUnique();

                    b.ToTable("Licna Karta");
                });

            modelBuilder.Entity("Models.Pasos", b =>
                {
                    b.Property<int>("IDdokumenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDdokumenta"));

                    b.Property<string>("BrojPasosa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Datum_isteka")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Datum_izdavanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdKorisnika")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("QR_kod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("izdat_od")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IDdokumenta");

                    b.HasIndex("IdKorisnika")
                        .IsUnique();

                    b.ToTable("Pasos");
                });

            modelBuilder.Entity("Models.RegularniKorisnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Broj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Datum_rodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Fotografija")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HashPassword")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImeRoditelja")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("JMBG")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Mesto_Rodjenja")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Opstina")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pol")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("SluzbenoLice")
                        .HasColumnType("bit");

                    b.Property<string>("TajniKljuc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ulica")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("JMBG")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Regularni Korisnik");
                });

            modelBuilder.Entity("Models.SaobracajnaDozvola", b =>
                {
                    b.Property<int>("IDdokumenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDdokumenta"));

                    b.Property<string>("BrojMotora")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BrojRegistracije")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BrojSaobracajneDozvole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojSasije")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BrojSedista")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumPrvogRegistrovanja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Datum_isteka")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Datum_izdavanja")
                        .HasColumnType("datetime2");

                    b.Property<string>("GodinaProizvodnje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdKorisnika")
                        .HasColumnType("int");

                    b.Property<string>("Marka")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Masa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nosivost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QR_kod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("izdat_od")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IDdokumenta");

                    b.HasIndex("IdKorisnika")
                        .IsUnique();

                    b.ToTable("Saobracajna Dozvola");
                });

            modelBuilder.Entity("Models.Stanica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Broj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojTelefona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Opstina")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ulica")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Stanica");
                });

            modelBuilder.Entity("Models.Termin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Datum_i_Vreme")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("StanicaID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("StanicaID");

                    b.ToTable("Termin");
                });

            modelBuilder.Entity("Models.VozackaDozvola", b =>
                {
                    b.Property<int>("IDdokumenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDdokumenta"));

                    b.Property<string>("BrojVozackeDozvole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Datum_isteka")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Datum_izdavanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdKorisnika")
                        .HasColumnType("int");

                    b.Property<string>("KategorijeVozila")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("QR_kod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("izdat_od")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IDdokumenta");

                    b.HasIndex("IdKorisnika")
                        .IsUnique();

                    b.ToTable("Vozacka Dozvola");
                });

            modelBuilder.Entity("Models.DozvolaZaOruzje", b =>
                {
                    b.HasOne("Models.RegularniKorisnik", "Korisnik")
                        .WithOne("DozvolaZaOruzje")
                        .HasForeignKey("Models.DozvolaZaOruzje", "IdKorisnika")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("Models.LicnaKarta", b =>
                {
                    b.HasOne("Models.RegularniKorisnik", "Korisnik")
                        .WithOne("LicnaKarta")
                        .HasForeignKey("Models.LicnaKarta", "IdKorisnika")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("Models.Pasos", b =>
                {
                    b.HasOne("Models.RegularniKorisnik", "Korisnik")
                        .WithOne("Pasos")
                        .HasForeignKey("Models.Pasos", "IdKorisnika")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("Models.SaobracajnaDozvola", b =>
                {
                    b.HasOne("Models.RegularniKorisnik", "Korisnik")
                        .WithOne("SaobracajnaDozvola")
                        .HasForeignKey("Models.SaobracajnaDozvola", "IdKorisnika")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("Models.Termin", b =>
                {
                    b.HasOne("Models.RegularniKorisnik", "Korisnik")
                        .WithMany("Termini")
                        .HasForeignKey("KorisnikID");

                    b.HasOne("Models.Stanica", "Stanica")
                        .WithMany("Termini")
                        .HasForeignKey("StanicaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Stanica");
                });

            modelBuilder.Entity("Models.VozackaDozvola", b =>
                {
                    b.HasOne("Models.RegularniKorisnik", "Korisnik")
                        .WithOne("VozackaDozvola")
                        .HasForeignKey("Models.VozackaDozvola", "IdKorisnika")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("Models.RegularniKorisnik", b =>
                {
                    b.Navigation("DozvolaZaOruzje");

                    b.Navigation("LicnaKarta");

                    b.Navigation("Pasos");

                    b.Navigation("SaobracajnaDozvola");

                    b.Navigation("Termini");

                    b.Navigation("VozackaDozvola");
                });

            modelBuilder.Entity("Models.Stanica", b =>
                {
                    b.Navigation("Termini");
                });
#pragma warning restore 612, 618
        }
    }
}
